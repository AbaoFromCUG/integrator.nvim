*integrator.txt*           For NVIM v0.8.0          Last change: 2024 March 28

==============================================================================
Table of Contents                               *integrator-table-of-contents*

1. Install                                                |integrator-install|
2. Usages                                                  |integrator-usages|
  - Commands                                      |integrator-usages-commands|
  - Variables                                    |integrator-usages-variables|
  - Launcher                                      |integrator-usages-launcher|
  - Settings                                      |integrator-usages-settings|
A infrastructure of neovim IDE; A bridge between various neovim plugins


==============================================================================
1. Install                                                *integrator-install*

**lazy.nvim**

>lua
    return {
        "AbaoFromCUG/integrator.nvim",
        config = {
            dap = {
                enabled = true
            },
            session = {
                enabled = true
            },
            settings = {
                enabled = true
            }
        }
    }
<


==============================================================================
2. Usages                                                  *integrator-usages*


COMMANDS                                          *integrator-usages-commands*

- commmand variables
- integrate telescope


COMMAND VARIABLES ~

>lua
    require("integrator.commands").register_command("myplugin.spec", function()
        return "result"
    end)
    
    --for async style command variable, such as build task
    require("integrator.commands").register_command("myplugin.another", function()
        local co = coroutine.running()
        return coroutine.create(function()
            vim.ui.select({ "A", "B" }, {}, function(item)
                coroutine.resume(co, item)
            end)
        end)
    end)
<


VARIABLES                                        *integrator-usages-variables*

- builtin variables
- command variables
- input variables

In `.vscode/launch.json` or `dap.configurations`

>json
    {
        "version": "0.2.0",
        "configurations": [
            {
                "name": "Desktop",
                "type": "cppdbg",
                "request": "launch",
                "program": "${workspace}/build/a.out",
                "arg": [
                    "${command:myplugin.spec}",
                    "${command:myplugin.another}",
                    "${file}"
                ]
            }
        ]
    }
<


LAUNCHER                                          *integrator-usages-launcher*

- select configuration
- save/load state to session automatically
- multiple type launch
    - dap
    - plenary.test_harness
    - more unit test
- launcher component (lualine.nvim)
- auto save current launcher (session.nvim)
- dap.nvim
    - configuration support `envFile`
    - inject `core.variables`

>lua
    require("lualine").setup({
        sections = {
            lualine_c = {
                "launcher",
            },
        },
    })
<

`envFile` in `.vscode/launch.json`

>json
    {
        "version": "0.2.0",
        "configurations": [
            {
                "name": "Desktop",
                "type": "cppdbg",
                "request": "launch",
                "envFile": "${workspaceFolder}/.env",
            }
        ]
    }
<


SETTINGS                                          *integrator-usages-settings*

Support vscodeâ€™s style settings file `.vscode/settings.json`, watch file via
timer

`.vscode/settings.json`

>json
    {
        "editor.tabSize": 2
    }
<

>lua
    local settings = require("integrator.settings")
    settings.on_setting_changed("editor.tabSize", function(new_tabSize) end)
    settings.on_setting_changed("editor", function(new_editor) end)
<

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
